package gui;

import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.ListIterator;
import javapop.Producto;
import javapop.Utilidad;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class BuscarProductos extends javax.swing.JFrame {

    private JFrame principal;
    private Producto prod = null;
    private ArrayList<Producto> prodaux;
    private ListIterator<Producto> li;
    private String total, actual;

    public BuscarProductos(JFrame ventana) {

        initComponents();
        ImageIcon imagenFondo = new ImageIcon("fondo.jpg");
        Icon iconoFondo = new ImageIcon(imagenFondo.getImage().getScaledInstance(lblFondo.getWidth(), lblFondo.getHeight(), Image.SCALE_DEFAULT));
        lblFondo.setIcon(iconoFondo);
        this.repaint();
        ImageIcon imagenLogo = new ImageIcon("logo.png");
        Icon iconoLogo = new ImageIcon(imagenLogo.getImage().getScaledInstance(lblLogo.getWidth(), lblLogo.getHeight(), Image.SCALE_DEFAULT));
        lblLogo.setIcon(iconoLogo);
        this.repaint();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("icono.png"));

        principal = ventana;
        principal.setVisible(false);
        this.setVisible(true);
        
        Utilidad.comprobarUrgente();
        
        panelProductos1.tituloEditable(false);
        panelProductos1.descripcionEditable(false);
        panelProductos1.precioEditable(false);
        recuento.setText("");

    }


    public void presenta(Producto p) {
        panelProductos1.setDatos(p);
        panelProductos1.setImage(p.getImagen());         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelProductos1 = new gui.PanelProductos();
        anterior = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        siguiente = new javax.swing.JButton();
        busqueda = new javax.swing.JTextField();
        palabra_clave = new javax.swing.JLabel();
        compra = new javax.swing.JButton();
        categorias = new javax.swing.JComboBox<>();
        recuento3 = new javax.swing.JLabel();
        recuento = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("JavaPop Buscar Productos");
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setLayout(null);
        jPanel1.add(panelProductos1);
        panelProductos1.setBounds(20, 230, 610, 470);

        anterior.setFont(new java.awt.Font("Berlin Sans FB", 1, 36)); // NOI18N
        anterior.setText("Anterior");
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });
        jPanel1.add(anterior);
        anterior.setBounds(20, 170, 220, 50);

        buscar.setFont(new java.awt.Font("Berlin Sans FB", 1, 36)); // NOI18N
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        jPanel1.add(buscar);
        buscar.setBounds(660, 80, 290, 70);

        siguiente.setFont(new java.awt.Font("Berlin Sans FB", 1, 36)); // NOI18N
        siguiente.setText("Siguiente");
        siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteActionPerformed(evt);
            }
        });
        jPanel1.add(siguiente);
        siguiente.setBounds(410, 170, 220, 50);
        jPanel1.add(busqueda);
        busqueda.setBounds(290, 110, 260, 30);

        palabra_clave.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        palabra_clave.setForeground(new java.awt.Color(255, 255, 255));
        palabra_clave.setText("Palabras clave");
        jPanel1.add(palabra_clave);
        palabra_clave.setBounds(290, 40, 250, 60);

        compra.setFont(new java.awt.Font("Berlin Sans FB", 1, 36)); // NOI18N
        compra.setText("Comprar");
        compra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compraActionPerformed(evt);
            }
        });
        jPanel1.add(compra);
        compra.setBounds(680, 630, 290, 70);

        categorias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Moda y accesorios", "TV, audio y foto", "Móviles y telefonía", "Informática y electrónica", "Consolas y videojuegos", "Deporte y ocio" }));
        jPanel1.add(categorias);
        categorias.setBounds(30, 110, 210, 20);

        recuento3.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        recuento3.setForeground(new java.awt.Color(255, 255, 255));
        recuento3.setText("Categoria");
        jPanel1.add(recuento3);
        recuento3.setBounds(40, 40, 230, 60);

        recuento.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        recuento.setForeground(new java.awt.Color(255, 255, 255));
        recuento.setText("1/10");
        jPanel1.add(recuento);
        recuento.setBounds(280, 160, 130, 60);
        jPanel1.add(lblLogo);
        lblLogo.setBounds(670, 170, 560, 430);

        lblFondo.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 48)); // NOI18N
        lblFondo.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblFondo);
        lblFondo.setBounds(0, 0, 1280, 720);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1280, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void siguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteActionPerformed
        if (li.hasNext()) {
            prod = li.next();
            if (prod != null) {
                presenta(prod);
                actual = String.valueOf(prodaux.indexOf(prod) + 1);
                recuento.setText(actual + "/" + total);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }

            if (Utilidad.getLogged().equals(prod.getClient())) {

                compra.setEnabled(false);

            } else {
                compra.setEnabled(true);
            }
        }
    }//GEN-LAST:event_siguienteActionPerformed

    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        if (li.hasPrevious()) {
            prod = li.previous();
            if (prod != null) {
                presenta(prod);
                actual = String.valueOf(prodaux.indexOf(prod) + 1);
                recuento.setText(actual + "/" + total);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }

            if (Utilidad.getLogged().equals(prod.getClient())) {

                compra.setEnabled(false);

            } else {

                compra.setEnabled(true);
            }
        }
    }//GEN-LAST:event_anteriorActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        principal.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void compraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compraActionPerformed
        // TODO add your handling code here:
        boolean aceptar = false;
        if (prod != null) {
            int resp = JOptionPane.showConfirmDialog(null, "¿Desea comprar el producto seleccionado?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (resp == 0){
                int resp2 = JOptionPane.showConfirmDialog(null, "El usuario " + Utilidad.getLogged().getNombre() + " le esta haciendo una oferta por su producto " + prod.getTitulo() + ".¿Desea aceptarla?", "Confirmación", JOptionPane.YES_NO_OPTION);
                if (resp2 == 0) {
                    aceptar = true;
                    li.remove();
                    Utilidad.compraProducto(prod.getClient(), prod, aceptar);
                    JOptionPane.showMessageDialog(this, "El producto ha sido comprado con éxito.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(this, "El producto no se ha comprado.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, " Error: - Producto no encontrado - ", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }

        if (li.hasNext()) {
            prod = (Producto) li.next();
            if (prod != null) {
                presenta(prod);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        } else if (li.hasPrevious()) {
            prod = (Producto) li.previous();
            if (prod != null) {
                presenta(prod);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            panelProductos1.limpiar();
            prod = null;
        }
        total = String.valueOf(prodaux.size());
        if (prodaux.size() == 0) {
            actual = "0";
        } else {
            actual = String.valueOf(prodaux.indexOf(prod) + 1);
        }
        recuento.setText(actual + "/" + total);


    }//GEN-LAST:event_compraActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed

        try {
            String busq, categoria;
            busq = busqueda.getText();
            categoria = categorias.getSelectedItem().toString();
            prodaux = Utilidad.busquedaProductos(busq, categoria);

            li = prodaux.listIterator();
            total = String.valueOf(prodaux.size());
            if (prodaux.size() < 1) {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                siguiente.setEnabled(false);
                anterior.setEnabled(false);
                actual = "0";
                total = "0";
                panelProductos1.limpiar();
                prod = null;
                recuento.setText(actual+"/"+total);
                return;
            } else {
                siguiente.setEnabled(true);
                anterior.setEnabled(true);
                compra.setEnabled(true);
            }
            if (li.hasNext()) {
                prod = (Producto) li.next();
                actual = String.valueOf(prodaux.indexOf(prod) + 1);
            }
            if (prod != null) {
                presenta(prod);
                if (Utilidad.getLogged().equals(prod.getClient())) {

                compra.setEnabled(false);

                }else {

                    compra.setEnabled(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
            recuento.setText(actual+"/"+total);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_buscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anterior;
    private javax.swing.JButton buscar;
    private javax.swing.JTextField busqueda;
    private javax.swing.JComboBox<String> categorias;
    private javax.swing.JButton compra;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel palabra_clave;
    private gui.PanelProductos panelProductos1;
    private javax.swing.JLabel recuento;
    private javax.swing.JLabel recuento3;
    private javax.swing.JButton siguiente;
    // End of variables declaration//GEN-END:variables
}
