
package gui;

import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.ListIterator;
import javapop.Cliente;
import javapop.ClientePro;
import javapop.Producto;
import javapop.Utilidad;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class VentanaConsultaUsuarios extends javax.swing.JFrame {
    
    private JFrame principal;
    private Cliente cliente = null;
    private ClientePro pro = null;
    private ArrayList<Cliente> peraux; 
    private ArrayList<Producto> prodaux = Utilidad.getProductos();
    private ListIterator<Cliente> li; 
    private String total,actual;
    public VentanaConsultaUsuarios(JFrame ventana) {
        
        initComponents();
        ImageIcon imagenFondo = new ImageIcon("fondo.jpg");
        Icon iconoFondo = new ImageIcon(imagenFondo.getImage().getScaledInstance(lblFondo.getWidth(), lblFondo.getHeight(),Image.SCALE_DEFAULT));
        lblFondo.setIcon(iconoFondo);
        this.repaint();
        ImageIcon imagenLogo = new ImageIcon("logo.png");
        Icon iconoLogo = new ImageIcon(imagenLogo.getImage().getScaledInstance(lblLogo.getWidth(), lblLogo.getHeight(),Image.SCALE_DEFAULT));
        lblLogo.setIcon(iconoLogo);
        this.repaint();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("icono.png"));
        
        principal = ventana;
        principal.setVisible(false);
        this.setVisible(true);
        
        consultarTodo();
        recuento.setText(actual + "/" + total);
        
    }
    
    /** Consulta las personas del ArrayList ordenadas para su presentación */
    private void consultarTodo() {
        try {

            peraux = Utilidad.getClientes();
            li = peraux.listIterator();
            total = String.valueOf(peraux.size());
            if (peraux.size() < 1) {
                JOptionPane.showMessageDialog(this, "No hay personas.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                siguiente.setEnabled(false);
                anterior.setEnabled(false);
                actual = "0";
                total = "0";
                return;
            } else {
                siguiente.setEnabled(true);
                anterior.setEnabled(true);
                baja.setEnabled(true);
            }
            if (li.hasNext()) {
                cliente = (Cliente)li.next();
                actual = String.valueOf(peraux.indexOf(cliente) + 1);
            }
            if (cliente != null) {
                presenta(cliente);
            } else {
                JOptionPane.showMessageDialog(this, "No hay personas.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error: " + e.toString());
        }
    }
    
    public void presenta(Cliente c){
        String tipo = c.getClass().getSimpleName();
        if (tipo.equals("Cliente")){
            panelClientes1.setDatos(c);
            panelPro1.limpiar();
        }
        else{
            pro = (ClientePro) c;
            panelClientes1.setDatos(pro);
            panelPro1.setDatos(pro);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        recuento = new javax.swing.JLabel();
        panelClientes1 = new gui.PanelClientes();
        panelPro1 = new gui.PanelPro();
        anterior = new javax.swing.JButton();
        siguiente = new javax.swing.JButton();
        baja = new javax.swing.JButton();
        lblLogo = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("JavaPop Consulta de Usuarios");
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setLayout(null);

        recuento.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        recuento.setForeground(new java.awt.Color(255, 255, 255));
        recuento.setText("0/0");
        jPanel1.add(recuento);
        recuento.setBounds(330, 80, 130, 60);
        jPanel1.add(panelClientes1);
        panelClientes1.setBounds(90, 150, 540, 450);
        jPanel1.add(panelPro1);
        panelPro1.setBounds(640, 360, 270, 350);

        anterior.setFont(new java.awt.Font("Berlin Sans FB", 1, 36)); // NOI18N
        anterior.setText("Anterior");
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });
        jPanel1.add(anterior);
        anterior.setBounds(90, 90, 220, 50);

        siguiente.setFont(new java.awt.Font("Berlin Sans FB", 1, 36)); // NOI18N
        siguiente.setText("Siguiente");
        siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteActionPerformed(evt);
            }
        });
        jPanel1.add(siguiente);
        siguiente.setBounds(410, 90, 220, 50);

        baja.setFont(new java.awt.Font("Berlin Sans FB", 1, 36)); // NOI18N
        baja.setText("Baja");
        baja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajaActionPerformed(evt);
            }
        });
        jPanel1.add(baja);
        baja.setBounds(90, 610, 290, 70);
        jPanel1.add(lblLogo);
        lblLogo.setBounds(830, 10, 440, 340);

        lblFondo.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 48)); // NOI18N
        lblFondo.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblFondo);
        lblFondo.setBounds(0, 0, 1280, 720);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1280, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajaActionPerformed
        
        if (cliente != null) {
            int resp = JOptionPane.showConfirmDialog(null, "¿Desea eliminar el cliente seleccionado?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (resp == 0){
                int contador = 0;
                ArrayList<Producto> prods = cliente.getProductos();
                if (prods.size() != 0){
                    for (int i = 0;i<prods.size();i++){
                        prodaux.remove(prods.get(i));
                        contador++;
                    }
                }   
                li.remove();
                JOptionPane.showMessageDialog(this, "El cliente ha sido dado de baja con éxito. Se han eliminado con el " + contador + " productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    
                
            }
            else{JOptionPane.showMessageDialog(this, "El cliente no se ha dado de baja.", "Mensaje", JOptionPane.INFORMATION_MESSAGE); }
        }else {
        JOptionPane.showMessageDialog(this, " Error: - Persona no encontrada - ", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
        
        if (li.hasNext()) {
        cliente = (Cliente)li.next();
        if (cliente != null) {
            presenta(cliente);
        } else {
            JOptionPane.showMessageDialog(this, "No hay personas.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    } else if (li.hasPrevious()) {
        cliente = (Cliente)li.previous();
        if (cliente != null) {
            presenta(cliente);
        } else {
            JOptionPane.showMessageDialog(this, "No hay personas.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    else{
        panelClientes1.limpiar();
        panelPro1.limpiar();
        cliente = null;
    }
        total = String.valueOf(peraux.size());
        if(peraux.size() == 0){
            actual = "0";
        }
        else{actual = String.valueOf(peraux.indexOf(cliente) + 1);}
        recuento.setText(actual + "/" + total);
    }//GEN-LAST:event_bajaActionPerformed

    private void siguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteActionPerformed
        if (li.hasNext()) {
        cliente = li.next();
        if (cliente != null) {
            presenta(cliente);
            actual = String.valueOf(peraux.indexOf(cliente) + 1);
            recuento.setText(actual + "/" + total);
        } else {
            JOptionPane.showMessageDialog(this, "No hay personas.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    }//GEN-LAST:event_siguienteActionPerformed

    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        if (li.hasPrevious()) {
        cliente = li.previous();
        if (cliente != null) {
            presenta(cliente);
            actual = String.valueOf(peraux.indexOf(cliente) + 1);
            recuento.setText(actual + "/" + total);
        } else {
            JOptionPane.showMessageDialog(this, "No hay personas.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    }//GEN-LAST:event_anteriorActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        principal.setVisible(true);
    }//GEN-LAST:event_formWindowClosed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anterior;
    private javax.swing.JButton baja;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblLogo;
    private gui.PanelClientes panelClientes1;
    private gui.PanelPro panelPro1;
    private javax.swing.JLabel recuento;
    private javax.swing.JButton siguiente;
    // End of variables declaration//GEN-END:variables
}
